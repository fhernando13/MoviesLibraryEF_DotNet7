// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using movieLibrary;

#nullable disable

namespace movieLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230721040105_relationshipMovieComment")]
    partial class relationshipMovieComment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("movieLibrary.Entities.Actor", b =>
                {
                    b.Property<int>("Id_actor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_actor"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<decimal>("Fortune")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_actor");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("movieLibrary.Entities.Comment", b =>
                {
                    b.Property<int>("Id_comment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_comment"));

                    b.Property<string>("Comments")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MovieId_movie")
                        .HasColumnType("int");

                    b.Property<int>("Movie_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Recommend")
                        .HasColumnType("bit");

                    b.HasKey("Id_comment");

                    b.HasIndex("MovieId_movie");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("movieLibrary.Entities.Gender", b =>
                {
                    b.Property<int>("Id_gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_gender"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_gender");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("movieLibrary.Entities.Movie", b =>
                {
                    b.Property<int>("Id_movie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_movie"));

                    b.Property<DateTime>("Daterelease")
                        .HasColumnType("date");

                    b.Property<bool>("Oncinema")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_movie");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("movieLibrary.Entities.Comment", b =>
                {
                    b.HasOne("movieLibrary.Entities.Movie", "Movie")
                        .WithMany("Commentss")
                        .HasForeignKey("MovieId_movie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("movieLibrary.Entities.Movie", b =>
                {
                    b.Navigation("Commentss");
                });
#pragma warning restore 612, 618
        }
    }
}
